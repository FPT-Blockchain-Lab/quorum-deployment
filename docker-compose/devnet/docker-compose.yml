# The following environment variables are substituted if present
# * QUORUM_CONSENSUS: default to clique
# * QUORUM_DOCKER_IMAGE: default to quorumengineering/quorum:21.7.1
# * QUORUM_TX_MANAGER_DOCKER_IMAGE: default to quorumengineering/tessera:21.7.2
# * QUORUM_GETH_ARGS: extra geth arguments to be included when running geth
# To use Constellation, set QUORUM_TX_MANAGER_DOCKER_IMAGE to Constellation docker image,
# e.g.: QUORUM_TX_MANAGER_DOCKER_IMAGE=quorumengineering/constellation:0.3.2 docker-compose up -d
# To use Remix, set QUORUM_GETH_ARGS="--rpccorsdomain https://remix.ethereum.org"
version: "3.6"
x-quorum-def:
  &quorum-def
  restart: "on-failure"
  image: "${QUORUM_DOCKER_IMAGE:-quorumengineering/quorum:21.7.1}"
  expose:
    - "21000"
    - "50400"
  healthcheck:
    test: ["CMD", "wget", "--spider", "--proxy", "off", "http://localhost:8545"]
    interval: 3s
    timeout: 3s
    retries: 10
    start_period: 5s
  labels:
    com.quorum.consensus: ${QUORUM_CONSENSUS:-clique}
  entrypoint:
    - /bin/sh
    - -c
    - |
      UDS_WAIT=10
      if [ "$${PRIVATE_CONFIG}" != "ignore" ]; then
      for i in $$(seq 1 100)
      do
        set -e
        if [ -S $${PRIVATE_CONFIG} ] && \
          [ "I'm up!" == "$$(wget --timeout $${UDS_WAIT} -qO- --proxy off 172.16.240.10$${NODE_ID}:9000/upcheck)" ];
        then break
        else
          echo "Sleep $${UDS_WAIT} seconds. Waiting for TxManager."
          sleep $${UDS_WAIT}
        fi
      done
      fi
      DDIR=/qdata/dd
      GENESIS_FILE="/networkdata/genesis.json"
      CONSENSUS_RPC_API="quorumPermission,quorumExtension,clique"
      NETWORK_ID=$$(cat $${GENESIS_FILE} | grep chainId | awk -F " " '{print $$2}' | awk -F "," '{print $$1}')

      rm -rf $${DDIR}
      mkdir -p $${DDIR}/keystore
      mkdir -p $${DDIR}/geth
      
      cp /networkdata/keys/validator$${NODE_ID}/nodekey $${DDIR}/geth/nodekey
      cp /networkdata/keys/validator$${NODE_ID}/accountKeystore $${DDIR}/keystore/
      cp /networkdata/disallowed-nodes.json $${DDIR}/
      cp /networkdata/static-nodes.json $${DDIR}/
      cp /networkdata/permission-config.json $${DDIR}/
      echo '[]' > $${DDIR}/permissioned-nodes.json
      
      geth --datadir $${DDIR} init $${GENESIS_FILE}

      BOOTNODE_ENODE1="enode://1d4c1ea1825c1e3328b14155a4a57d7b7c49da45dcc4bf10dede6d69321c5861951fc93e0103538cf9349981f562ac9cfb0d6e3f6bcc9e82cce52761d568c43f@line1.fat-space.com:30542?discport=0" ;
      BOOTNODE_ENODE2="enode://4f202136096fa1de3caa90efe5baafe757c9e63952d8e60d668eac580f7c7402228085d6fea9a5eb1faf2691e7cb61a661effe6ec6bb46873676e7ccd7d7ad14@line1.fat-space.com:31143?discport=0" ;

      geth \
        --identity node$${NODE_ID}-${QUORUM_CONSENSUS:-clique} \
        --datadir $${DDIR} \
        --permissioned \
        --nodiscover \
        --bootnodes=$$BOOTNODE_ENODE1,$$BOOTNODE_ENODE2 \
        --nat extip:192.168.89.92 \
        --verbosity 5 \
        --networkid $${NETWORK_ID} \
        --ws \
        --ws.addr 0.0.0.0 \
        --ws.port 8546 \
        --ws.api admin,eth,debug,miner,net,shh,txpool,personal,web3,quorum,$${CONSENSUS_RPC_API} \
        --ws.origins "*" \
        --rpc \
        --rpccorsdomain "*" \
        --rpcvhosts "*" \
        --rpcaddr 0.0.0.0 \
        --rpcport 8545 \
        --rpcapi admin,eth,debug,miner,net,shh,txpool,personal,web3,quorum,$${CONSENSUS_RPC_API} \
        --port 21000 \
        --unlock 0 \
        --allow-insecure-unlock \
        --nousb \
        --password /networkdata/passwords.txt \
        --syncmode full --mine --miner.threads 1 --miner.gasprice 0 --emitcheckpoints
x-tx-manager-def:
  &tx-manager-def
  image: "${QUORUM_TX_MANAGER_DOCKER_IMAGE:-quorumengineering/tessera:21.7.2}"
  expose:
    - "9000"
    - "9080"
  restart: "no"
  healthcheck:
    test: ["CMD-SHELL", "[ -S /qdata/tm/tm.ipc ] || exit 1"]
    interval: 3s
    timeout: 3s
    retries: 20
    start_period: 5s
  entrypoint:
    - /bin/sh
    - -c
    - |
      if [ "$${PRIVATE_CONFIG}" == "ignore" ]; then
        /bin/true
        exit 0
      fi
      DDIR=/qdata/tm
      rm -rf $${DDIR}
      mkdir -p $${DDIR}
      DOCKER_IMAGE="${QUORUM_TX_MANAGER_DOCKER_IMAGE:-quorumengineering/tessera:21.7}"
      TX_MANAGER=$$(echo $${DOCKER_IMAGE} | sed 's/^.*\/\(.*\):.*$$/\1/g')
      echo "TxManager: $${TX_MANAGER}"
      case $${TX_MANAGER}
      in
        tessera)
          cp /networkdata/keys/validator$${NODE_ID}/tessera.pub $${DDIR}/tm.pub
          cp /networkdata/keys/validator$${NODE_ID}/tessera.key $${DDIR}/tm.key
          if [ -f "/tessera/tessera-app.jar" ]; then
              TESSERA_VERSION=$$(unzip -p /tessera/tessera-app.jar META-INF/MANIFEST.MF | grep Tessera-Version | cut -d" " -f2)
          else
              TESSERA_VERSION=$$(/tessera/bin/tessera version)
          fi
          echo "Tessera version: $${TESSERA_VERSION}"
          # sorting versions to target correct configuration
          V08=$$(echo -e "0.8\n$${TESSERA_VERSION}" | sort -n -r -t '.' -k 1,1 -k 2,2 | head -n1)
          V09AndAbove=$$(echo -e "0.9\n$${TESSERA_VERSION}" | sort -n -r -t '.' -k 1,1 -k 2,2 | head -n1)
          TESSERA_CONFIG_TYPE="-09"
          case "$${TESSERA_VERSION}" in
              "$${V09AndAbove}")
                  TESSERA_CONFIG_TYPE="-09"
                  ;;
          esac

          echo Config type $${TESSERA_CONFIG_TYPE}

          #generating the two config flavors
          cat <<EOF > $${DDIR}/tessera-config-09.json
          {
            "useWhiteList": false,
            "jdbc": {
              "username": "sa",
              "password": "",
              "url": "jdbc:h2:./$${DDIR}/db;MODE=Oracle;TRACE_LEVEL_SYSTEM_OUT=0",
              "autoCreateTables": true
            },
            "serverConfigs":[
            {
              "app":"ThirdParty",
              "enabled": true,
              "serverAddress": "http://$$(hostname -i):9080",
              "communicationType" : "REST"
            },
            {
              "app":"Q2T",
              "enabled": true,
              "serverAddress": "unix:$${DDIR}/tm.ipc",
              "communicationType" : "REST"
            },
            {
              "app":"P2P",
              "enabled": true,
              "serverAddress": "http://$$(hostname -i):9000",
              "sslConfig": {
                "tls": "OFF"
              },
              "communicationType" : "REST"
            }
            ],
            "peer": [
               {
                   "url": "http://txmanager1:9000"
               },
               {
                   "url": "http://txmanager2:9000"
               },
               {
                   "url": "http://txmanager3:9000"
               },
               {
                   "url": "http://txmanager4:9000"
               }
            ],
            "keys": {
              "passwords": [],
              "keyData": [
                {
                  "config": $$(cat $${DDIR}/tm.key),
                  "publicKey": "$$(cat $${DDIR}/tm.pub)"
                }
              ]
            },
            "alwaysSendTo": []
          }
      EOF
          cat $${DDIR}/tessera-config$${TESSERA_CONFIG_TYPE}.json
          if [ -f "/tessera/tessera-app.jar" ]; then
              java -Xms128M -Xmx128M -jar /tessera/tessera-app.jar -configfile $${DDIR}/tessera-config$${TESSERA_CONFIG_TYPE}.json
          else
              export JAVA_OPTS="-Xms128M -Xmx128M"
              /tessera/bin/tessera -configfile $${DDIR}/tessera-config$${TESSERA_CONFIG_TYPE}.json
          fi
          ;;
        constellation)
          echo "socket=\"$${DDIR}/tm.ipc\"\npublickeys=[\"/networkdata/keys/validator$${NODE_ID}/tessera.pub\"]\n" > $${DDIR}/tm.conf
          constellation-node \
            --url=http://$$(hostname -i):9000/ \
            --port=9000 \
            --socket=$${DDIR}/tm.ipc \
            --othernodes=http://172.16.240.101:9000/,http://172.16.240.102:9000/,http://172.16.240.103:9000/,http://172.16.240.104:9000/ \
            --publickeys=/networkdata/keys/validator$${NODE_ID}/tessera.pub \
            --privatekeys=/networkdata/keys/validator$${NODE_ID}/tessera.key \
            --storage=$${DDIR} \
            --verbosity=4
          ;;
        *)
          echo "Invalid Transaction Manager"
          exit 1
          ;;
      esac
services:
  node1:
    << : *quorum-def
    hostname: node1
    ports:
      - "22000:8545"
      - "22010:8546"
      - "21000:21000"
    volumes:
      - vol1:/qdata
      - ./data:/networkdata:ro
    depends_on:
      - txmanager1
    environment:
      - PRIVATE_CONFIG=${PRIVATE_CONFIG:-/qdata/tm/tm.ipc}
      - NODE_ID=0
    networks:
      quorum-dev-net:
        ipv4_address: 172.16.240.11
  txmanager1:
    << : *tx-manager-def
    hostname: txmanager1
    ports:
      - "9081:9080"
    volumes:
      - vol1:/qdata
      - ./data:/networkdata:ro
    networks:
      quorum-dev-net:
        ipv4_address: 172.16.240.101
    environment:
      - PRIVATE_CONFIG=${PRIVATE_CONFIG:-/qdata/tm/tm.ipc}
      - NODE_ID=0
networks:
  quorum-dev-net:
    name: quorum-dev-net
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 172.16.240.0/24
volumes:
  "vol1":
